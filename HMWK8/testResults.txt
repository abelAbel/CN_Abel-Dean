Test 1 (n = 6)
topo.txt:
    0 1 2
    0 2 5
    0 3 1
    1 2 3
    1 3 2
    2 3 3
    2 4 1
    2 5 5
    3 4 1
    4 5 2
Result:
    What is the total number of routers? ( Must be >= 2)
    0
    What is the total number of routers? ( Must be >= 2)
    -1
    What is the total number of routers? ( Must be >= 2)
    1
    What is the total number of routers? ( Must be >= 2)
    1.5
    Need to be an Integer
    What is the total number of routers? ( Must be >= 2)
    ssgdfg
    Need to be an Integer
    What is the total number of routers? ( Must be >= 2)
    sdfg223
    Need to be an Integer
    What is the total number of routers? ( Must be >= 2)
    6
    6
    [[0, -1, -1, -1, -1, -1
     [-1, 0, -1, -1, -1, -1
     [-1, -1, 0, -1, -1, -1
     [-1, -1, -1, 0, -1, -1
     [-1, -1, -1, -1, 0, -1
     [-1, -1, -1, -1, -1, 0]]

    [[0, 2, 5, 1, -1, -1
     [2, 0, 3, 2, -1, -1
     [5, 3, 0, 3, 1, 5
     [1, 2, 3, 0, 1, -1
     [-1, -1, 1, 1, 0, 2
     [-1, -1, 5, -1, 2, 0]]

    Initialization:
        N' => [ 0 ]
        Y' => [ (Empty Set) ]
        D  => [ 0 2 5 1 -1 -1 ]
        P  => [ -1 0 0 0 -1 -1 ]

    Node: 3 Value: 1
        N' => [ 0 3 ]
        Y' => [ (0, 3) ]
        D  => [ 0 2 5 1 -1 -1 ]
        P  => [ -1 0 0 0 -1 -1 ]
    Children's of [3] -> 1 2 4
        N' => [ 0 3 ]
        Y' => [ (0, 3) ]
        D  => [ 0 2 4 1 2 -1 ]
        P  => [ -1 0 3 0 3 -1 ]

    Node: 1 Value: 2
        N' => [ 0 3 1 ]
        Y' => [ (0, 3) (0, 1) ]
        D  => [ 0 2 4 1 2 -1 ]
        P  => [ -1 0 3 0 3 -1 ]
    Children's of [1] -> 2
        N' => [ 0 3 1 ]
        Y' => [ (0, 3) (0, 1) ]
        D  => [ 0 2 4 1 2 -1 ]
        P  => [ -1 0 3 0 3 -1 ]

    Node: 4 Value: 2
        N' => [ 0 3 1 4 ]
        Y' => [ (0, 3) (0, 1) (3, 4) ]
        D  => [ 0 2 4 1 2 -1 ]
        P  => [ -1 0 3 0 3 -1 ]
    Children's of [4] -> 2 5
        N' => [ 0 3 1 4 ]
        Y' => [ (0, 3) (0, 1) (3, 4) ]
        D  => [ 0 2 3 1 2 4 ]
        P  => [ -1 0 4 0 3 4 ]

    Node: 2 Value: 3
        N' => [ 0 3 1 4 2 ]
        Y' => [ (0, 3) (0, 1) (3, 4) (4, 2) ]
        D  => [ 0 2 3 1 2 4 ]
        P  => [ -1 0 4 0 3 4 ]
    Children's of [2] -> 5
        N' => [ 0 3 1 4 2 ]
        Y' => [ (0, 3) (0, 1) (3, 4) (4, 2) ]
        D  => [ 0 2 3 1 2 4 ]
        P  => [ -1 0 4 0 3 4 ]

    Node: 5 Value: 4
        N' => [ 0 3 1 4 2 5 ]
        Y' => [ (0, 3) (0, 1) (3, 4) (4, 2) (4, 5) ]
        D  => [ 0 2 3 1 2 4 ]
        P  => [ -1 0 4 0 3 4 ]
    Children's of [5] ->
        N' => [ 0 3 1 4 2 5 ]
        Y' => [ (0, 3) (0, 1) (3, 4) (4, 2) (4, 5) ]
        D  => [ 0 2 3 1 2 4 ]
        P  => [ -1 0 4 0 3 4 ]
    Destination      Link
       V3          (V0, V3)
       V1          (V0, V1)
       V4          (V0, V3)
       V2          (V0, V3)
       V5          (V0, V3)

Test 2 (n = 6) -> Bad File on row 2, it is 0 based
topo.txt:
    0 1 2
    0 2 5
    10 3 1 //then changed to  0 3 -1 -> then changed to 0 3 1
    1 2 3
    1 3 2
    2 3 3
    2 4 1
    2 5 5
    3 4 1
    4 5 2
Result:
    What is the total number of routers? ( Must be >= 2)
    6
    6
    [[0, -1, -1, -1, -1, -1
     [-1, 0, -1, -1, -1, -1
     [-1, -1, 0, -1, -1, -1
     [-1, -1, -1, 0, -1, -1
     [-1, -1, -1, -1, 0, -1
     [-1, -1, -1, -1, -1, 0]]
    !! ERROR ON ROW: 2 !!
    You need to fix your file! Press "Enter" to continue

    !! ERROR ON ROW: 2 !!
    You need to fix your file! Press "Enter" to continue

    !! ERROR ON ROW: 2 !!
    You need to fix your file! Press "Enter" to continue

    !! ERROR ON ROW: 2 !!
    You need to fix your file! Press "Enter" to continue


    [[0, 2, 5, 1, -1, -1
     [2, 0, 3, 2, -1, -1
     [5, 3, 0, 3, 1, 5
     [1, 2, 3, 0, 1, -1
     [-1, -1, 1, 1, 0, 2
     [-1, -1, 5, -1, 2, 0]]

    Initialization:
    	N' => [ 0 ]
    	Y' => [ (Empty Set) ]
    	D  => [ 0 2 5 1 -1 -1 ]
    	P  => [ -1 0 0 0 -1 -1 ]

    Node: 3 Value: 1
    	N' => [ 0 3 ]
    	Y' => [ (0, 3) ]
    	D  => [ 0 2 5 1 -1 -1 ]
    	P  => [ -1 0 0 0 -1 -1 ]
    Children's of [3] -> 1 2 4
    	N' => [ 0 3 ]
    	Y' => [ (0, 3) ]
    	D  => [ 0 2 4 1 2 -1 ]
    	P  => [ -1 0 3 0 3 -1 ]

    Node: 1 Value: 2
    	N' => [ 0 3 1 ]
    	Y' => [ (0, 3) (0, 1) ]
    	D  => [ 0 2 4 1 2 -1 ]
    	P  => [ -1 0 3 0 3 -1 ]
    Children's of [1] -> 2
    	N' => [ 0 3 1 ]
    	Y' => [ (0, 3) (0, 1) ]
    	D  => [ 0 2 4 1 2 -1 ]
    	P  => [ -1 0 3 0 3 -1 ]

    Node: 4 Value: 2
    	N' => [ 0 3 1 4 ]
    	Y' => [ (0, 3) (0, 1) (3, 4) ]
    	D  => [ 0 2 4 1 2 -1 ]
    	P  => [ -1 0 3 0 3 -1 ]
    Children's of [4] -> 2 5
    	N' => [ 0 3 1 4 ]
    	Y' => [ (0, 3) (0, 1) (3, 4) ]
    	D  => [ 0 2 3 1 2 4 ]
    	P  => [ -1 0 4 0 3 4 ]

    Node: 2 Value: 3
    	N' => [ 0 3 1 4 2 ]
    	Y' => [ (0, 3) (0, 1) (3, 4) (4, 2) ]
    	D  => [ 0 2 3 1 2 4 ]
    	P  => [ -1 0 4 0 3 4 ]
    Children's of [2] -> 5
    	N' => [ 0 3 1 4 2 ]
    	Y' => [ (0, 3) (0, 1) (3, 4) (4, 2) ]
    	D  => [ 0 2 3 1 2 4 ]
    	P  => [ -1 0 4 0 3 4 ]

    Node: 5 Value: 4
    	N' => [ 0 3 1 4 2 5 ]
    	Y' => [ (0, 3) (0, 1) (3, 4) (4, 2) (4, 5) ]
    	D  => [ 0 2 3 1 2 4 ]
    	P  => [ -1 0 4 0 3 4 ]
    Children's of [5] ->
    	N' => [ 0 3 1 4 2 5 ]
    	Y' => [ (0, 3) (0, 1) (3, 4) (4, 2) (4, 5) ]
    	D  => [ 0 2 3 1 2 4 ]
    	P  => [ -1 0 4 0 3 4 ]
    Destination      Link
       V3          (V0, V3)
       V1          (V0, V1)
       V4          (V0, V3)
       V2          (V0, V3)
       V5          (V0, V3)

Test 3 (n = 8)
topo.txt:
    0 1 8
    0 2 2
    0 3 5
    1 3 2
    1 5 13
    2 3 2
    2 4 5
    3 5 6
    3 6 3
    3 4 1
    4 6 1
    5 6 2
    5 7 3
    6 7 6
Result:
    What is the total number of routers? ( Must be >= 2)
    8
    8
    [[0, -1, -1, -1, -1, -1, -1, -1
     [-1, 0, -1, -1, -1, -1, -1, -1
     [-1, -1, 0, -1, -1, -1, -1, -1
     [-1, -1, -1, 0, -1, -1, -1, -1
     [-1, -1, -1, -1, 0, -1, -1, -1
     [-1, -1, -1, -1, -1, 0, -1, -1
     [-1, -1, -1, -1, -1, -1, 0, -1
     [-1, -1, -1, -1, -1, -1, -1, 0]]

    [[0, 8, 2, 5, -1, -1, -1, -1
     [8, 0, -1, 2, -1, 13, -1, -1
     [2, -1, 0, 2, 5, -1, -1, -1
     [5, 2, 2, 0, 1, 6, 3, -1
     [-1, -1, 5, 1, 0, -1, 1, -1
     [-1, 13, -1, 6, -1, 0, 2, 3
     [-1, -1, -1, 3, 1, 2, 0, 6
     [-1, -1, -1, -1, -1, 3, 6, 0]]

    Initialization:
        N' => [ 0 ]
        Y' => [ (Empty Set) ]
        D  => [ 0 8 2 5 -1 -1 -1 -1 ]
        P  => [ -1 0 0 0 -1 -1 -1 -1 ]

    Node: 2 Value: 2
        N' => [ 0 2 ]
        Y' => [ (0, 2) ]
        D  => [ 0 8 2 5 -1 -1 -1 -1 ]
        P  => [ -1 0 0 0 -1 -1 -1 -1 ]
    Children's of [2] -> 3 4
        N' => [ 0 2 ]
        Y' => [ (0, 2) ]
        D  => [ 0 8 2 4 7 -1 -1 -1 ]
        P  => [ -1 0 0 2 2 -1 -1 -1 ]

    Node: 3 Value: 4
        N' => [ 0 2 3 ]
        Y' => [ (0, 2) (2, 3) ]
        D  => [ 0 8 2 4 7 -1 -1 -1 ]
        P  => [ -1 0 0 2 2 -1 -1 -1 ]
    Children's of [3] -> 1 4 5 6
        N' => [ 0 2 3 ]
        Y' => [ (0, 2) (2, 3) ]
        D  => [ 0 6 2 4 5 10 7 -1 ]
        P  => [ -1 3 0 2 3 3 3 -1 ]

    Node: 4 Value: 5
        N' => [ 0 2 3 4 ]
        Y' => [ (0, 2) (2, 3) (3, 4) ]
        D  => [ 0 6 2 4 5 10 7 -1 ]
        P  => [ -1 3 0 2 3 3 3 -1 ]
    Children's of [4] -> 6
        N' => [ 0 2 3 4 ]
        Y' => [ (0, 2) (2, 3) (3, 4) ]
        D  => [ 0 6 2 4 5 10 6 -1 ]
        P  => [ -1 3 0 2 3 3 4 -1 ]

    Node: 1 Value: 6
        N' => [ 0 2 3 4 1 ]
        Y' => [ (0, 2) (2, 3) (3, 4) (3, 1) ]
        D  => [ 0 6 2 4 5 10 6 -1 ]
        P  => [ -1 3 0 2 3 3 4 -1 ]
    Children's of [1] -> 5
        N' => [ 0 2 3 4 1 ]
        Y' => [ (0, 2) (2, 3) (3, 4) (3, 1) ]
        D  => [ 0 6 2 4 5 10 6 -1 ]
        P  => [ -1 3 0 2 3 3 4 -1 ]

    Node: 6 Value: 6
        N' => [ 0 2 3 4 1 6 ]
        Y' => [ (0, 2) (2, 3) (3, 4) (3, 1) (4, 6) ]
        D  => [ 0 6 2 4 5 10 6 -1 ]
        P  => [ -1 3 0 2 3 3 4 -1 ]
    Children's of [6] -> 5 7
        N' => [ 0 2 3 4 1 6 ]
        Y' => [ (0, 2) (2, 3) (3, 4) (3, 1) (4, 6) ]
        D  => [ 0 6 2 4 5 8 6 12 ]
        P  => [ -1 3 0 2 3 6 4 6 ]

    Node: 5 Value: 8
        N' => [ 0 2 3 4 1 6 5 ]
        Y' => [ (0, 2) (2, 3) (3, 4) (3, 1) (4, 6) (6, 5) ]
        D  => [ 0 6 2 4 5 8 6 12 ]
        P  => [ -1 3 0 2 3 6 4 6 ]
    Children's of [5] -> 7
        N' => [ 0 2 3 4 1 6 5 ]
        Y' => [ (0, 2) (2, 3) (3, 4) (3, 1) (4, 6) (6, 5) ]
        D  => [ 0 6 2 4 5 8 6 11 ]
        P  => [ -1 3 0 2 3 6 4 5 ]

    Node: 7 Value: 11
        N' => [ 0 2 3 4 1 6 5 7 ]
        Y' => [ (0, 2) (2, 3) (3, 4) (3, 1) (4, 6) (6, 5) (5, 7) ]
        D  => [ 0 6 2 4 5 8 6 11 ]
        P  => [ -1 3 0 2 3 6 4 5 ]
    Children's of [7] ->
        N' => [ 0 2 3 4 1 6 5 7 ]
        Y' => [ (0, 2) (2, 3) (3, 4) (3, 1) (4, 6) (6, 5) (5, 7) ]
        D  => [ 0 6 2 4 5 8 6 11 ]
        P  => [ -1 3 0 2 3 6 4 5 ]
    Destination      Link
       V2          (V0, V2)
       V3          (V0, V2)
       V4          (V0, V2)
       V1          (V0, V2)
       V6          (V0, V2)
       V5          (V0, V2)
       V7          (V0, V2)

